{% extends 'base.html.twig' %}

{% block title %}{{ video.title }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}

    <link href="{{ asset('assets/plugins/toastr/toastr.min.css') }}" type="text/css" rel="stylesheet" />
{% endblock %}


{% block body %}
    <h2 class="card-box">{{ video.title }}
        {% if video.owner(app.user) %}
            <span style="display: inline" class="pull-right">
                <a class="btn btn-sm btn-info waves-effect waves-light" data-toggle="tooltip" data-placement="bottom" title="{{ t('ui.template.videos.watch.tooltip.edit')|trans }}"
                       href="{{ path('app.videos.edit', {'id': video.id}) }}"><span class="fa fa-edit"></span></a>

                {{ include('videos/partials/_delete_form.html.twig') }}
            </span>
        {% endif %}
     </h2>

    <div class="panel">
        <div class="panel-body">

            {% set _autoplay = configuration.isSet('autoplay-videos') and configuration.get('autoplay-videos') %}

            <video src="{{ asset(videos_url_segment ~ video.filename) }}"
                   poster="{{ asset(thumbnails_url_segment ~ video.thumbnail) }}"
                   controls{{ _autoplay ? ' autoplay' }}></video>

            <p class="text-muted font-13 m-t-30 m-b-30">
                {{ video.description|nl2br }}
            </p>

            <div class="text-left">
                <p class="text-muted font-13"><strong>{{ t('ui.template.videos.watch.text.uploaded')|trans }}:</strong>
                    <span class="m-l-15">{{ video.createdAt|timeElapsedSinceNow }}</span>
                </p>

                <p class="text-muted font-13"><strong>{{ t('ui.template.videos.watch.text.uploader')|trans }} :</strong>
                    <span class="m-l-15">
                        <a href="{{ path('app.user.profile', {'id': video.user.id}) }}">{{ video.user.fullname }}</a>

                        {% if is_granted('IS_AUTHENTICATED_FULLY') %}
                            {% set _btn_class = video.user.hasSubscriber(app.user) ? 'btn-danger' : 'btn-success' %}
                            {% set _operation = video.user.hasSubscriber(app.user) ? 'remove' : 'add' %}

                            <a href="javascript:void(0);" id="addRemoveSubscriber" data-operation="{{ _operation }}">
                                <span class="fa fa-rss btn btn-sm {{ _btn_class }}"> </span>
                            </a>
                        {% endif %}
                    </span>
                </p>

                <p class="text-muted font-13"><strong>{{ t('ui.template.videos.watch.text.views')|trans }} :</strong>
                    <span class="m-l-15">{{ video.views }}</span></p>

                <p class="text-muted font-13 m-b-5">
                    <strong>{{ t('ui.template.videos.watch.text.category')|trans }} :</strong> <span class="m-l-15">
                        <a href="{{ path('app.category.view', {'slug': video.category.slug}) }}">
                            {{ video.category.name }}
                        </a>
                    </span>
                </p>

                {% if video.tags.count > 0 %}
                    <p class="text-muted font-13 m-b-5"><strong>{{ t('ui.template.videos.watch.text.tags')|trans }}: </strong>
                        {% for tag in video.tags %}
                            <span class="m-l-15">
                                <a href="{{ path('app.tags.view', {'slugs': tag.slug}) }}">
                                    {{ tag.name }}
                                </a>
                            </span>
                        {% endfor %}
                    </p>
                {% endif %}

            </div>
        </div>
    </div>

    {{ include('votes/partials/_votes.html.twig', {'video': video}) }}

    {% if is_granted('comment', video) %}
        <div class="card-box">
            <form role="form">
                <div class="form-group">
                    <textarea id="comment-box" rows="5" placeholder="{{ t('ui.template.videos.comments.form.comment.placeholder')|trans }}" class="form-control"></textarea>
                </div>
                <p class="text-right">
                    <button class="btn btn-success waves-effect waves-light" id="submit-comment-btn">
                        {{ t('ui.template.videos.comments.form.submit.caption')|trans }}
                    </button>
                </p>
            </form>
        </div>
    {% endif %}

    <div id="comments-section">
        {% if video.comments.count > 0 %}
            <h4 class="card-box header-title m-t-0 m-b-30">
                <i class="zmdi zmdi-comments m-r-5"></i> {{ t('ui.template.videos.watch.heading.comments')|trans }}
            </h4>

                {% for comment in video.comments %}
                    {{ include('comments/partials/_comment.html.twig', {'comment': comment}) }}
                {% endfor %}
        {% endif %}
    </div>

    <div class="card-box">
        <a class="btn btn-success waves-effect waves-light"
           href="{{ path('app.homepage') }}">{{ t('ui.template.videos.watch.link.text.home')|trans }}</a>
    </div>
{% endblock %}

{% block javascripts_bottom %}
    {{ parent() }}

    <script src="{{ asset('assets/js/sftube.js') }}"></script>
    <script src="{{ asset('assets/plugins/toastr/toastr.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/sweetalert2/sweetalert2.all.min.js') }}"></script>
{% endblock %}

{% block javascripts_inpage %}
    {{ parent() }}
    <script>
    {% if is_granted('comment', video) %}
        $('#submit-comment-btn').on('click', function (e) {
            e.preventDefault();

            const comment = $('#comment-box').val();

            $.ajax({
                url: '{{ path('app.videos.comment', {'id': video.id}) }}',
                method: 'POST',
                data: {
                    comment: comment
                },
                dataType: 'json',
                success: function (response, status, xhr) {
                    if (response.success) {
                        toastr.success('{{ t('ui.template.videos.watch.toastr.message.comment-submitted')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.success')|trans }}', SFTube.toastr.defaults);

                        $.ajax({
                            url: '{{ path('app.videos.comments', {'id': video.id}) }}',
                            method: 'GET',
                            dataType: 'html',
                            success: function (response, status, xhr) {
                                $('#comment-box').val('');

                                $('#comments-section').html(response);
                            },
                            error: function (xhr, status, error) {
                                toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-displaying-comments')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-submitting-comment')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                }
            });
        });
    {% endif %}

    {% if is_granted('ROLE_USER') %}
        $('.vote-button').on('click', function (e) {
            e.preventDefault();

            const vote = $(this).data('vote');

            $.ajax({
                url: '{{ path('app.videos.vote', {'id': video.id}) }}',
                method: 'POST',
                dataType: 'json',
                data: {
                    vote: vote
                },
                success: function (response, status, xhr) {
                    if (response.success) {
                        toastr.success('{{ t('ui.template.videos.watch.toastr.message.vote-submitted')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.success')|trans }}', SFTube.toastr.defaults);

                        $.ajax({
                            url: '{{ path('app.videos.votes', {'id': video.id}) }}',
                            method: 'GET',
                            dataType: 'html',
                            success: function (response, status, xhr) {
                                $('#voting').html(response);
                            },
                            error: function (xhr, status, error) {
                                toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-getting-votes')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                            }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-submitting-vote')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                }
            });
        });

        $('#deleteVideoBtn').on('click', function (e) {
            e.preventDefault();

            const form = $(this).parent();

            Swal.fire({
                title: '{{ t('ui.template.videos.watch.sweetalert.delete-video.title')|trans }}',
                text: '{{ t('ui.template.videos.watch.sweetalert.delete-video.text', {'video': video.title})|trans|escape('js') }}',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: '{{ t('ui.template.videos.watch.sweetalert.delete-video.cancel-button-text')|trans }}',
                confirmButtonText: '{{ t('ui.template.videos.watch.sweetalert.delete-video.confirmation-button-text')|trans }}'
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            })
        });

        $('#addRemoveSubscriber').on('click', function (e) {
            e.preventDefault();

            const btn = $(this);
            const operation = btn.data('operation');

            $.ajax({
                url: '{{ path('app.subscriptions.add-remove-subscriber') }}',
                method: 'POST',
                dataType: 'json',
                data: {
                    user_id: {{ video.user.id }},
                    subscriber_id: {{ app.user.id }},
                    operation: operation
                },
                success: function (response, status, xhr) {
                    if (response.success) {
                        const span = btn.children('span');

                        if (operation === 'add') {
                            toastr.success('{{ t('ui.template.videos.watch.toastr.message.subscription-added')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.success')|trans }}', SFTube.toastr.defaults);

                            span.removeClass('btn-success').addClass('btn-danger');
                            btn.data('operation', 'remove');
                        } else {
                            toastr.success('{{ t('ui.template.videos.watch.toastr.message.subscription-removed')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.success')|trans }}', SFTube.toastr.defaults);

                            span.removeClass('btn-danger').addClass('btn-success');
                            btn.data('operation', 'add');
                        }
                    } else {
                        if (operation === 'add') {
                            toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-adding-subscription')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                        } else {
                            toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-removing-subscription')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    if (operation === 'add') {
                        toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-adding-subscription')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                    } else {
                        toastr.error('{{ t('ui.template.videos.watch.toastr.message.error-removing-subscription')|trans }}', '{{ t('ui.template.videos.watch.toastr.title.error')|trans }}', SFTube.toastr.defaults);
                    }
                }
            });
        });

    {% endif %}
    </script>
{% endblock %}
